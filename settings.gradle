boolean travis   = (System.env['TRAVIS'] ?: false) as boolean
boolean appveyor = (System.env['APPVEYOR'] ?: false) as boolean
boolean fullBuild = !travis && !appveyor

def includeProject = { String projectDirName, String projectName ->
    File baseDir = new File(settingsDir, projectDirName)
    File projectDir = new File(baseDir, projectName)
    String buildFileName = "${projectName}.gradle"

    assert projectDir.isDirectory()
    assert new File(projectDir, buildFileName).isFile()

    include projectName
    project(":${projectName}").projectDir    = projectDir
    project(":${projectName}").buildFileName = buildFileName
}

rootProject.name = 'griffon'

includeProject 'subprojects', 'griffon-core'
includeProject 'subprojects', 'griffon-core-compile'
includeProject 'subprojects', 'griffon-core-test'
includeProject 'subprojects', 'griffon-guice'
includeProject 'subprojects', 'griffon-groovy'
includeProject 'subprojects', 'griffon-groovy-compile'
includeProject 'subprojects', 'griffon-swing'
includeProject 'subprojects', 'griffon-swing-groovy'
includeProject 'subprojects', 'griffon-javafx'
includeProject 'subprojects', 'griffon-javafx-groovy'
includeProject 'subprojects', 'griffon-javafx-kotlin'
includeProject 'subprojects', 'griffon-lanterna'
includeProject 'subprojects', 'griffon-lanterna-groovy'
includeProject 'subprojects', 'griffon-pivot'
includeProject 'subprojects', 'griffon-pivot-groovy'
includeProject 'subprojects', 'griffon-fest-test'
includeProject 'subprojects', 'griffon-pivot-test'
includeProject 'subprojects', 'griffon-javafx-test'
includeProject 'subprojects', 'gradle-griffon-plugin'
includeProject 'subprojects', 'gradle-griffon-build-plugin'

if (!appveyor) {
    includeProject 'samples', 'sample-swing-java'
    includeProject 'samples', 'sample-swing-groovy'
    includeProject 'samples', 'sample-javafx-java'
    includeProject 'samples', 'sample-javafx-groovy'
    includeProject 'samples', 'sample-lanterna-java'
    includeProject 'samples', 'sample-lanterna-groovy'
//    includeProject 'samples', 'sample-javafx-kotlin'
    includeProject 'samples', 'sample-pivot-java'
    includeProject 'samples', 'sample-pivot-groovy'
}

if (fullBuild) {
    includeProject 'subprojects', 'application-master-pom'
    includeProject 'samples', 'editor-swing-groovy'
    includeProject 'samples', 'editor-swing-java'
    includeProject 'samples', 'editor-javafx-java'
    includeProject 'samples', 'browser-javafx-groovy'
    includeProject 'samples', 'console-swing-groovy'
    includeProject 'templates', 'griffon-swing-java-templates'
    includeProject 'templates', 'griffon-swing-groovy-templates'
    includeProject 'templates', 'griffon-javafx-java-templates'
    includeProject 'templates', 'griffon-javafx-groovy-templates'
    includeProject 'templates', 'griffon-javafx-kotlin-templates'
    includeProject 'templates', 'griffon-pivot-java-templates'
    includeProject 'templates', 'griffon-pivot-groovy-templates'
    includeProject 'templates', 'griffon-lanterna-java-templates'
    includeProject 'templates', 'griffon-lanterna-groovy-templates'
    includeProject 'templates', 'griffon-standard-templates'
    includeProject 'docs', 'griffon-guide'
    includeProject 'docs', 'griffon-site'
}
